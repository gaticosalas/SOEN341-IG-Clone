[{"/Users/jlong/Code/SOEN341-IG-Clone/client/src/store.js":"1","/Users/jlong/Code/SOEN341-IG-Clone/client/src/components/auth/Login.jsx":"2","/Users/jlong/Code/SOEN341-IG-Clone/client/src/components/pages/Post.jsx":"3","/Users/jlong/Code/SOEN341-IG-Clone/client/src/components/pages/PostItem.jsx":"4","/Users/jlong/Code/SOEN341-IG-Clone/client/src/reducers/profile.js":"5","/Users/jlong/Code/SOEN341-IG-Clone/client/src/components/pages/FollowedPosts.jsx":"6","/Users/jlong/Code/SOEN341-IG-Clone/client/src/components/layout/Navbar.jsx":"7","/Users/jlong/Code/SOEN341-IG-Clone/client/src/reducers/posts.js":"8"},{"size":386,"mtime":1613496897138,"results":"9","hashOfConfig":"10"},{"size":2284,"mtime":1613707800334,"results":"11","hashOfConfig":"10"},{"size":1600,"mtime":1614871866845,"results":"12","hashOfConfig":"10"},{"size":1225,"mtime":1614871817398,"results":"13","hashOfConfig":"10"},{"size":1095,"mtime":1613536421335,"results":"14","hashOfConfig":"10"},{"size":1584,"mtime":1614921008762,"results":"15","hashOfConfig":"10"},{"size":1426,"mtime":1614869866381,"results":"16","hashOfConfig":"10"},{"size":2272,"mtime":1613536421335,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1g55gpx",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jlong/Code/SOEN341-IG-Clone/client/src/store.js",[],["37","38"],"/Users/jlong/Code/SOEN341-IG-Clone/client/src/components/auth/Login.jsx",[],"/Users/jlong/Code/SOEN341-IG-Clone/client/src/components/pages/Post.jsx",["39","40","41"],"import React, { Fragment, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { fetchPost } from '../../actions/posts'\nimport Moment from 'react-moment'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Post = ({ isAuthenticated, post: { user, username, picture, caption, avatar, likes, date }, fetchPost, isFetching }) => {\n\n    let { post_id } = useParams()\n    useEffect(() => {\n        fetchPost(post_id)\n    }, []);\n\n    console.log(post_id)\n    console.log(\"profile:\", user)\n\n\n\n    // if (!isAuthenticated) {\n    //     return <Redirect to='/' />\n    // }\n\n\n\n    return isFetching ? <Fragment><h1>loading</h1></Fragment>\n        :\n        <Fragment>\n            <div className=\"container\" >\n                <hr />\n                <img style={{ width: '100%' }} src={picture} />\n                <p>{`caption:${caption}`}</p>\n                <p>Posted on: <Moment format='YYYY/MM/DD'>{date}</Moment></p>\n                <img src={avatar} />\n                <p>{`Username:${username}`}</p>\n                {/* for some reason sometimes it works, sometimes it doesn't */}\n                {/* <span>{`likes: ${likes.length}`}</span> */}\n\n            </div>\n\n\n        </Fragment>\n\n\n\n}\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    post: state.posts.post,\n    isFetching: state.posts.post.isFetching,\n    user: state.auth.user,\n\n});\n\nconst mapDispatchToProps = {\n    fetchPost\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Post)\n\n//post_id sample: 6033dec395b05f40205f4c30\n","/Users/jlong/Code/SOEN341-IG-Clone/client/src/components/pages/PostItem.jsx",["42","43","44","45"],"import React, { Fragment, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchPost } from '../../actions/posts'\nimport Moment from 'react-moment'\nimport { Link, Redirect } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst PostItem = ({ post: { _id, picture, user, caption, username, avatar, likes, date } }) => {\n    console.log({ _id })\n    // const [image, setImage] = useState(null);\n\n    return (\n        <Fragment>\n            <div className=\"container\" >\n                <hr />\n                <img style={{ width: '100%' }} src={picture} />\n                <p>{`caption:${caption}`}</p>\n                <p>Posted on: <Moment format='YYYY/MM/DD'>{date}</Moment></p>\n                <img src={avatar} />\n                <p>{`Username:${username}`}</p>\n                <span>{`likes: ${likes.length}`}</span>\n                <Link className=\"btn\" to={`/post/${_id}`}>CLICK TO SEE POST</Link>\n\n\n            </div>\n\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth,\n\n    // post: state.posts.post,\n\n\n})\n\nconst mapDispatchToProps = {\n    fetchPost\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostItem)\n","/Users/jlong/Code/SOEN341-IG-Clone/client/src/reducers/profile.js",["46"],"/Users/jlong/Code/SOEN341-IG-Clone/client/src/components/pages/FollowedPosts.jsx",["47"],"/Users/jlong/Code/SOEN341-IG-Clone/client/src/components/layout/Navbar.jsx",[],"/Users/jlong/Code/SOEN341-IG-Clone/client/src/reducers/posts.js",["48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":13,"column":8,"nodeType":"55","endLine":13,"endColumn":10,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":31,"column":17,"nodeType":"59","endLine":31,"endColumn":64},{"ruleId":"57","severity":1,"message":"58","line":34,"column":17,"nodeType":"59","endLine":34,"endColumn":37},{"ruleId":"60","severity":1,"message":"61","line":1,"column":27,"nodeType":"62","messageId":"63","endLine":1,"endColumn":36},{"ruleId":"60","severity":1,"message":"64","line":5,"column":16,"nodeType":"62","messageId":"63","endLine":5,"endColumn":24},{"ruleId":"57","severity":1,"message":"58","line":17,"column":17,"nodeType":"59","endLine":17,"endColumn":64},{"ruleId":"57","severity":1,"message":"58","line":20,"column":17,"nodeType":"59","endLine":20,"endColumn":37},{"ruleId":"65","severity":1,"message":"66","line":15,"column":1,"nodeType":"67","endLine":46,"endColumn":2},{"ruleId":"68","severity":1,"message":"69","line":22,"column":13,"nodeType":"59","endLine":22,"endColumn":48},{"ruleId":"65","severity":1,"message":"66","line":25,"column":1,"nodeType":"67","endLine":91,"endColumn":2},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchPost' and 'post_id'. Either include them or remove the dependency array. If 'fetchPost' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["72"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Update the dependencies array to be: [fetchPost, post_id]",{"range":"75","text":"76"},[484,486],"[fetchPost, post_id]"]